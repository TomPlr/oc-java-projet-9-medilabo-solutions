services:
  # Patient Database
  patient-db:
    image: mysql:latest
    container_name: patient-db
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - patient-db-data:/var/lib/mysql
      - ./services/ms-patient/src/main/resources/data.sql:/docker-entrypoint-initdb.d/data.sql
    ports:
      - "3306:3306"
    networks:
      - medilabo-network
    healthcheck:
      test: [ "CMD", "mysql","-u", "root", "-p${MYSQL_ROOT_PASSWORD}" ]
      interval: 10s
      retries: 5
      timeout: 5s

  # MongoDB Database (Local Only)
  notes-db:
    image: mongo:latest
    container_name: notes-db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_LOCAL_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_LOCAL_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGODB_DATABASE}
    volumes:
      - notes-db-data:/data/db
      - ./services/ms-notes/src/main/resources/collections/notes.js:/docker-entrypoint-initdb.d/notes.js
    ports:
      - "27017:27017"
    networks:
      - medilabo-network
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # Gateway Service
  ms-gateway:
    build:
      context: ./services/ms-gateway
      dockerfile: Dockerfile
    container_name: ms-gateway
    ports:
      - "8080:8080"
    networks:
      - medilabo-network
    environment:
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI=${KEYCLOAK_ISSUER_URI}
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI=${KEYCLOAK_JWK_SET_URI}

  # Patient Service
  ms-patient:
    build:
      context: ./services/ms-patient
      dockerfile: Dockerfile
    container_name: ms-patient
    ports:
      - "8082:8082"
    depends_on:
      patient-db:
        condition: service_healthy
    networks:
      - medilabo-network
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://${PATIENT_DB_HOST}:${PATIENT_DB_PORT}/${PATIENT_DB_NAME}
      - SPRING_DATASOURCE_USERNAME=${PATIENT_DB_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${PATIENT_DB_PASSWORD}
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI=${KEYCLOAK_ISSUER_URI}
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI=${KEYCLOAK_JWK_SET_URI}

  # Notes Service
  ms-notes:
    build:
      context: ./services/ms-notes
      dockerfile: Dockerfile
    container_name: ms-notes
    ports:
      - "8083:8083"
    depends_on:
      notes-db:
        condition: service_healthy
    networks:
      - medilabo-network
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://${MONGODB_LOCAL_USER}:${MONGODB_LOCAL_PASSWORD}@notes-db:27017/${MONGODB_DATABASE}?authSource=admin
    # You can uncomment this line to use MongoDB Atlas instead of local MongoDB
    # - SPRING_DATA_MONGODB_URI=mongodb+srv://${MONGODB_USER}:${MONGODB_PASSWORD}@${MONGODB_HOST}/${MONGODB_DATABASE}?retryWrites=true&w=majority

      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI=${KEYCLOAK_ISSUER_URI}
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI=${KEYCLOAK_JWK_SET_URI}

  # Assessment Service
  ms-assessment:
    build:
      context: ./services/ms-assessment
      dockerfile: Dockerfile
    container_name: ms-assessment
    ports:
      - "8084:8084"
    depends_on:
      - ms-gateway
    networks:
      - medilabo-network
    environment:
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI=${KEYCLOAK_ISSUER_URI}
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI=${KEYCLOAK_JWK_SET_URI}

  # UI Service
  ms-ui:
    build:
      context: ./services/ms-ui
      dockerfile: Dockerfile
    container_name: ms-ui
    ports:
      - "4200:80"
    depends_on:
      - ms-gateway
    networks:
      - medilabo-network

networks:
  medilabo-network:
    driver: bridge

volumes:
  patient-db-data:
  notes-db-data: